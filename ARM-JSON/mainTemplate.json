{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "9861305021123208747"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "servicePrincipalCreationURL": "https://spnc72raj24r7wm.azurewebsites.net",
      "publisherVault": {
        "publisherSubscription": "9838302b-c9ac-4e97-8b61-101b52f6b961",
        "vaultResourceGroupName": "metered-billing-accelerator-20240115",
        "vaultName": "spnc72raj24r7wm",
        "bootstrapSecretName": "BootstrapSecret"
      },
      "amqpEndpoint": "https://spnc72raj24r7wm.servicebus.windows.net/metering"
    },
    "meteringConfiguration": "[variables('$fxv#0')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "setupMeteredBillingConfiguration",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "bootstrapSecretValue": {
            "reference": {
              "keyVault": {
                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('meteringConfiguration').publisherVault.publisherSubscription, variables('meteringConfiguration').publisherVault.vaultResourceGroupName), 'Microsoft.KeyVault/vaults', variables('meteringConfiguration').publisherVault.vaultName)]"
              },
              "secretName": "[variables('meteringConfiguration').publisherVault.bootstrapSecretName]"
            }
          },
          "meteringConfiguration": {
            "value": "[variables('meteringConfiguration')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "2698643294662922134"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "artifactsLocation": {
              "type": "string",
              "metadata": {
                "description": "Location for scripts etc."
              }
            },
            "artifactsLocationSasToken": {
              "type": "securestring",
              "metadata": {
                "description": "SAS token to access scripts etc."
              }
            },
            "bootstrapSecretValue": {
              "type": "securestring",
              "metadata": {
                "description": "The bootstrap secret to request service principal creation"
              }
            },
            "meteringConfiguration": {
              "type": "object",
              "defaultValue": {
                "servicePrincipalCreationURL": "https://my-rest-api.contoso.com",
                "amqpEndpoint": "https://metering-contoso.servicebus.windows.net/metering",
                "publisherVault": {
                  "publisherSubscription": "{isvSubscriptionId}",
                  "vaultResourceGroupName": "...",
                  "vaultName": "...",
                  "bootstrapSecretName": "BootstrapSecret"
                }
              },
              "metadata": {
                "description": "The metering configuration object"
              }
            }
          },
          "variables": {
            "names": {
              "identity": {
                "setup": "uami-setup"
              },
              "runtimeKeyVault": {
                "name": "[format('kvchgp{0}', uniqueString(resourceGroup().id))]",
                "meteringSubmissionSecretName": "meteringsubmissionconnection"
              },
              "deploymentScript": {
                "name": "deploymentScriptCreateSP",
                "azCliVersion": "2.36.0"
              },
              "managedApp": {
                "managedBy": "[resourceGroup().managedBy]",
                "resourceGroupName": "[split(resourceGroup().managedBy, '/')[4]]",
                "appName": "[split(resourceGroup().managedBy, '/')[8]]"
              }
            },
            "roles": {
              "Owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
              "Contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
              "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "KeyVault": {
                "KeyVaultSecretsOfficer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
                "KeyVaultSecretsUser": "4633458b-17de-408a-b874-0445c86b69e6"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[variables('names').identity.setup]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('names').identity.setup), variables('roles').Contributor, resourceGroup().id)]",
              "properties": {
                "description": "[format('{0} should be Contributor on the managed resource group', variables('names').identity.setup)]",
                "principalType": "ServicePrincipal",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('names').identity.setup), '2023-01-31').principalId]",
                "delegatedManagedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('names').identity.setup)]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roles').Contributor)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('names').identity.setup)]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[variables('names').runtimeKeyVault.name]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true,
                "enableSoftDelete": false,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                }
              }
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2023-08-01",
              "name": "[variables('names').deploymentScript.name]",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "[variables('names').deploymentScript.azCliVersion]",
                "timeout": "PT10M",
                "retentionInterval": "P1D",
                "cleanupPreference": "OnExpiration",
                "containerSettings": {
                  "containerGroupName": "[uniqueString(resourceGroup().id, variables('names').deploymentScript.name)]"
                },
                "primaryScriptUri": "[uri(parameters('artifactsLocation'), format('scripts/triggerServicePrincipalCreation.sh{0}', parameters('artifactsLocationSasToken')))]",
                "environmentVariables": [
                  {
                    "name": "SERVICE_PRINCIPAL_CREATION_URL",
                    "value": "[parameters('meteringConfiguration').servicePrincipalCreationURL]"
                  },
                  {
                    "name": "BOOTSTRAP_SECRET_VALUE",
                    "secureValue": "[parameters('bootstrapSecretValue')]"
                  },
                  {
                    "name": "MANAGED_BY",
                    "value": "[variables('names').managedApp.managedBy]"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "setServicePrincipalSecret",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vaultName": {
                    "value": "[variables('names').runtimeKeyVault.name]"
                  },
                  "secretName": {
                    "value": "[variables('names').runtimeKeyVault.meteringSubmissionSecretName]"
                  },
                  "secretValue": {
                    "reference": {
                      "keyVault": {
                        "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('meteringConfiguration').publisherVault.publisherSubscription, parameters('meteringConfiguration').publisherVault.vaultResourceGroupName), 'Microsoft.KeyVault/vaults', parameters('meteringConfiguration').publisherVault.vaultName)]"
                      },
                      "secretName": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('names').deploymentScript.name)).outputs.secretName]"
                    }
                  },
                  "managedBy": {
                    "value": "[variables('names').managedApp.managedBy]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.25.53.49325",
                      "templateHash": "3528419675669228890"
                    }
                  },
                  "parameters": {
                    "vaultName": {
                      "type": "string"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretValue": {
                      "type": "securestring",
                      "metadata": {
                        "description": "The service principal secret"
                      }
                    },
                    "managedBy": {
                      "type": "string",
                      "metadata": {
                        "description": "The .managedBy property of the managed resource group"
                      }
                    }
                  },
                  "variables": {
                    "servicePrincipal": {
                      "servicePrincipalInformation": "[json(parameters('secretValue'))]"
                    },
                    "connectionInformation": {
                      "managedBy": "[parameters('managedBy')]"
                    },
                    "mergedSecrets": "[string(union(variables('servicePrincipal'), variables('connectionInformation')))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('vaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[variables('mergedSecrets')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deploymentScripts', variables('names').deploymentScript.name)]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('names').runtimeKeyVault.name)]"
              ]
            }
          ]
        }
      }
    }
  ]
}
